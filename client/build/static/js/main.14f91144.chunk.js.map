{"version":3,"sources":["state/state.tsx","AddBookModal/Form.tsx","AddBookModal/AddBookForm.tsx","AddBookModal/index.tsx","RatingBar/index.tsx","BookListPage/index.tsx","constants.ts","BookInfoPage/index.tsx","App.tsx","index.tsx","state/reducer.ts"],"names":["initState","books","StateContext","createContext","StateProvider","reducer","children","useReducer","state","dispatch","Provider","value","useStateValue","useContext","TextField","field","label","placeholder","Form","Field","style","color","name","NumberField","min","max","type","AddBookForm","onSubmit","onClose","initialValues","isbn","title","published","author","genres","rating","description","validate","values","errFill","errors","match","isValid","dirty","className","component","Grid","Column","floated","Button","onClick","disabled","AddBookModal","modalOpen","errMsg","Modal","open","centered","closeIcon","Header","Content","Segment","inverted","RatingBar","Rating","icon","maxRating","BookListPage","React","useState","setModalOpen","error","setError","closeModal","submitNewBook","a","book","Math","floor","random","toString","replace","split","axios","post","newBook","data","payload","console","response","Container","textAlign","Table","celled","Row","HeaderCell","Body","Object","map","id","key","Cell","to","join","BookInfoPage","useParams","find","b","deleteBook","get","bookList","delete","Divider","hidden","as","Link","basic","App","activeItem","setActiveItem","useEffect","log","Menu","pointing","secondary","Item","active","path","render","ReactDOM","action","reduce","init","obj","document","getElementById"],"mappings":"6SAGMA,EAAmB,CACrBC,MAAO,IAGEC,EAAeC,wBAA+C,CACvEH,EACA,kBAAMA,KAGGI,EAA8C,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,SAAmC,EAC1EC,qBAAWF,EAASL,GADsD,mBAC9FQ,EAD8F,KACvFC,EADuF,KAGtG,OACI,kBAACP,EAAaQ,SAAd,CAAuBC,MAAQ,CAAEH,EAAOC,IAClCH,IAKDM,EAAgB,kBAAMC,qBAAWX,I,sECCjCY,EAAiC,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,YAC3D,OACI,kBAACC,EAAA,EAAKC,MAAN,KACI,+BAASH,GACT,kBAAC,IAAD,iBAAYD,EAAZ,CAAoBE,YAAcA,KAClC,yBAAKG,MAAQ,CAAEC,MAAO,QAClB,kBAAC,IAAD,CAAcC,KAAOP,EAAMO,UAM9BC,EAAqC,SAAC,GAA6C,IAA3CR,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,MAAOQ,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,IACpE,OACI,kBAACP,EAAA,EAAKC,MAAN,KACI,+BAASH,GACT,kBAAC,IAAD,iBAAYD,EAAZ,CAAoBW,KAAK,SAASF,IAAMA,EAAMC,IAAMA,KACpD,yBAAKL,MAAQ,CAAEC,MAAO,QAClB,kBAAC,IAAD,CAAcC,KAAOP,EAAMO,UC2B5BK,EA5DsB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAgC9C,OACI,kBAAC,IAAD,CAAQC,cAhCY,CACpBC,KAAM,GACNC,MAAO,GACPC,UAAW,GACXC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,EACRC,YAAa,IAyBuBT,SAAWA,EAAWU,SAtB5C,SAACC,GACf,IACMC,EAAU,yBAEVC,EAEF,GAYJ,OAVKF,EAAOP,QACRS,EAAOT,MAAQQ,GAEdD,EAAON,UAAUS,MAVV,wDAWRD,EAAOR,UATQ,uBAWdM,EAAOL,SACRO,EAAOP,OAASM,GAGbC,KAMH,YAAyB,IAAtBE,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACR,OACI,kBAAC,IAAD,CAAMC,UAAU,WACZ,kBAAC,IAAD,CAAO7B,MAAM,aAAaC,YAAY,QAAQK,KAAK,QAAQwB,UAAYhC,IACvE,kBAAC,IAAD,CAAOE,MAAM,iBAAiBC,YAAY,aAAaK,KAAK,YAAYwB,UAAYhC,IACpF,kBAAC,IAAD,CAAOE,MAAM,cAAcC,YAAY,SAASK,KAAK,SAASwB,UAAYhC,IAC1E,kBAAC,IAAD,CAAOE,MAAM,SAASC,YAAY,yCAAyCK,KAAK,SAASwB,UAAYhC,IACrG,kBAAC,IAAD,CAAOE,MAAM,cAAcC,YAAY,yBAAyBK,KAAK,cAAcwB,UAAYhC,IAC/F,kBAAC,IAAD,CAAOE,MAAM,SAASC,YAAY,SAASK,KAAK,SAASE,IAAM,EAAIC,IAAM,EAAIqB,UAAYvB,IACzF,kBAACwB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,CAAaC,QAAQ,QACjB,kBAACC,EAAA,EAAD,CAAQxB,KAAK,SAASL,MAAM,MAAM8B,QAAUtB,GAA5C,WAEJ,kBAACkB,EAAA,EAAKC,OAAN,CAAaC,QAAQ,SACjB,kBAACC,EAAA,EAAD,CAAQxB,KAAK,SAASuB,QAAQ,QAAQ5B,MAAM,OAAO+B,UAAYR,IAAUD,GAAzE,eCxCjBU,EAZM,SAAC,GAA0D,IAAxDzB,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,QAASyB,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAClD,OACI,kBAACC,EAAA,EAAD,CAAOC,KAAOH,EAAYzB,QAAUA,EAAU6B,UAAW,EAAQC,WAAS,GACtE,kBAACH,EAAA,EAAMI,OAAP,uBACA,kBAACJ,EAAA,EAAMK,QAAP,KACMN,GAAU,kBAACO,EAAA,EAAD,CAASC,UAAQ,EAAC1C,MAAM,OAAxB,iBAAyCkC,IACrD,kBAAC,EAAD,CAAa3B,SAAWA,EAAWC,QAAUA,O,SCC9CmC,EARG,SAAC,GAA6B,IAA3B5B,EAA0B,EAA1BA,OACjB,OACI,yBAAKS,UAAU,cACX,kBAACoB,EAAA,EAAD,CAAQC,KAAK,OAAOd,UAAQ,EAAChB,OAASA,EAAS+B,UAAY,MCsExDC,EAnEgB,WAAO,IAAD,EACDxD,IADC,mBACvBX,EADuB,KACvBA,MAASQ,EADc,OAEG4D,IAAMC,UAAkB,GAF3B,mBAEzBhB,EAFyB,KAEdiB,EAFc,OAGLF,IAAMC,SAAiB,IAHlB,mBAGzBE,EAHyB,KAGlBC,EAHkB,KAS3BC,EAAa,WACfH,GAAa,GACbE,EAAS,KAKPE,EAAa,uCAAG,WAAOpC,GAAP,mBAAAqC,EAAA,sEAERC,EAFQ,2BAGPtC,GAHO,IAIVR,KANkB+C,KAAKC,MAAM,IAA6B,IAAhBD,KAAKE,UAAuBC,WAOtE9C,OAAQI,EAAOJ,OAAO8C,WAAWC,QAAQ,KAAM,IAAIC,MAAM,OAL/C,SAOkBC,IAAMC,KAAN,UCjCrB,ODiCqB,UAAqCR,GAPvD,gBAOAS,EAPA,EAONC,KACR9E,EAAS,CAAEiB,KAAM,WAAY8D,QAASF,IACtCZ,IATc,kDAWde,QAAQjB,MAAM,KAAIkB,SAASH,KAAKf,OAChCC,EAAS,KAAIiB,SAASH,KAAKf,OAZb,0DAAH,sDAgBnB,OACI,yBAAK3B,UAAU,OACX,kBAAC8C,EAAA,EAAD,CAAWC,UAAU,UACjB,0CAEJ,kBAACC,EAAA,EAAD,CAAOC,QAAM,GACT,kBAACD,EAAA,EAAMjC,OAAP,KACI,kBAACiC,EAAA,EAAME,IAAP,KACI,kBAACF,EAAA,EAAMG,WAAP,cACA,kBAACH,EAAA,EAAMG,WAAP,eACA,kBAACH,EAAA,EAAMG,WAAP,kBACA,kBAACH,EAAA,EAAMG,WAAP,eACA,kBAACH,EAAA,EAAMG,WAAP,iBAGR,kBAACH,EAAA,EAAMI,KAAP,KAEQC,OAAO3D,OAAOtC,GAAOkG,KAAI,SAACtB,EAAYuB,GAAb,OACrB,kBAACP,EAAA,EAAME,IAAP,CAAWM,IAAMD,GACb,kBAACP,EAAA,EAAMS,KAAP,KAAY,kBAAC,IAAD,CAAMC,GAAI,UAAY1B,EAAK9C,MAAS8C,EAAK7C,QACrD,kBAAC6D,EAAA,EAAMS,KAAP,KAAczB,EAAK3C,QACnB,kBAAC2D,EAAA,EAAMS,KAAP,KAAczB,EAAK5C,WACnB,kBAAC4D,EAAA,EAAMS,KAAP,KAAczB,EAAK1C,OAAOqE,KAAK,OAC/B,kBAACX,EAAA,EAAMS,KAAP,KAAY,kBAAC,EAAD,CAAWlE,OAASyC,EAAKzC,QAAU,WAMnE,kBAAC,EAAD,CAAckB,UAAYA,EAAY1B,SAAW+C,EAAgB9C,QAAU6C,EAAanB,OAASiB,IACjG,kBAACtB,EAAA,EAAD,CAAQC,QAAU,WAxDtBoB,GAAa,KAwDT,kB,QEhCGkC,EA/BgB,WAAO,IAAD,EACD7F,IADC,mBACvBX,EADuB,KACvBA,MAASQ,EADc,KAEzBsB,EAAS2E,cAAT3E,KACF8C,EAAOqB,OAAO3D,OAAOtC,GAAO0G,MAAK,SAAAC,GAAC,OAAIA,EAAE7E,OAASA,KAEjD8E,EAAU,uCAAG,8BAAAjC,EAAA,+EAEsBQ,IAAM0B,IAAN,UDhBtB,OCgBsB,kBAAoC/E,IAF1D,uBAEGgF,EAFH,EAEHxB,KAFG,SAGLH,IAAM4B,OAAN,UDjBK,OCiBL,kBAAsCjF,IAHjC,OAIXtB,EAAS,CAAEiB,KAAM,WAAY8D,QAASuB,IAJ3B,kDAMXtB,QAAQjB,MAAM,KAAIkB,SAASH,KAAKf,OANrB,0DAAH,qDAUhB,OACI,yBAAK3B,UAAU,OACX,kBAAC8C,EAAA,EAAD,CAAWC,UAAU,QACjB,mCAAMf,QAAN,IAAMA,OAAN,EAAMA,EAAM7C,MAAO,kBAAC,EAAD,CAAWI,QAAa,OAAJyC,QAAI,IAAJA,OAAA,EAAAA,EAAMzC,SAAU,KACvD,kBAAC6E,EAAA,EAAD,MACA,+CAAepC,QAAf,IAAeA,OAAf,EAAeA,EAAM3C,QACrB,kDAAkB2C,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAM5C,WACxB,+CAAc4C,QAAd,IAAcA,OAAd,EAAcA,EAAM1C,OAAOqE,KAAK,OAChC,oDAAmB3B,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMxC,cAE7B,kBAAC4E,EAAA,EAAD,CAASC,QAAM,IACf,kBAAChE,EAAA,EAAD,CAAQiE,GAAKC,IAAOb,GAAG,IAAIc,OAAK,EAAChG,MAAM,MAAM8B,QAAU0D,GAAvD,YCWGS,EAnCO,WAAO,IAAD,EACH1G,IAAbH,EADgB,sBAEY4D,IAAMC,SAAS,QAF3B,mBAElBiD,EAFkB,KAENC,EAFM,KAe1B,OAXAnD,IAAMoD,WAAU,WACd,sBAAC,8BAAA7C,EAAA,+EAEoCQ,IAAM0B,IAAN,UFlBlB,OEkBkB,WAFpC,gBAEiBC,EAFjB,EAEWxB,KACR9E,EAAS,CAAEiB,KAAM,gBAAiB8D,QAASuB,IAH9C,gDAKGtB,QAAQiC,IAAR,MALH,wDAAD,KAQC,CAACjH,IAGF,yBAAKoC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC8C,EAAA,EAAD,KACE,kBAACgC,EAAA,EAAD,CAAMC,UAAQ,EAACC,WAAS,GACtB,kBAACF,EAAA,EAAKG,KAAN,CAAWX,GAAKC,IAAOb,GAAG,IAAIjF,KAAK,OAAOyG,OAAuB,SAAfR,EAAuBpE,QAAU,kBAAMqE,EAAc,UAAvG,QACA,kBAACG,EAAA,EAAKG,KAAN,CAAWxG,KAAK,OAAOyG,OAAuB,SAAfR,EAAuBpE,QAAU,kBAAMqE,EAAc,UAApF,QACA,kBAACG,EAAA,EAAKG,KAAN,CAAWxG,KAAK,SAASyG,OAAuB,WAAfR,EAAyBpE,QAAU,kBAAMqE,EAAc,YAAxF,WAEF,kBAACP,EAAA,EAAD,CAASC,QAAM,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,KAAK,eAAeC,OAAS,kBAAM,kBAAC,EAAD,SAC1C,kBAAC,IAAD,CAAOD,KAAK,IAAIC,OAAS,kBAAM,kBAAC,EAAD,c,OChC3CC,IAASD,OACL,kBAAC,EAAD,CAAe5H,QCLI,SAACG,EAAc2H,GAClC,OAAQA,EAAOzG,MACX,IAAK,gBACD,OAAO,2BACAlB,GADP,IAEIP,MAAM,2BACCkI,EAAO3C,QAAQ4C,QAAO,SAACC,EAAMxD,GAAP,mBAAC,eACnBwD,GADkB,kBAEpBxD,EAAK9C,KAAO8C,MACb,KACDrE,EAAMP,SAGrB,IAAK,WACD,OAAO,2BACAO,GADP,IAEIP,MAAM,2BACCO,EAAMP,OADR,kBAEAkI,EAAO3C,QAAQzD,KAAOoG,EAAO3C,YAG1C,IAAK,WACD,IAAM8C,EAAG,2BACF9H,GADE,IAELP,MAAM,eACCO,EAAMP,SAKjB,cAFOqI,EAAIrI,MAAMkI,EAAO3C,QAAQzD,MAEzBuG,EACX,QACI,OAAO9H,KD1Bf,kBAAC,EAAD,OAEF+H,SAASC,eAAe,W","file":"static/js/main.14f91144.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nimport { State, Action, StateProviderProps } from '../types';\n\nconst initState: State = {\n    books: { }\n};\n\nexport const StateContext = createContext<[State, React.Dispatch<Action>]>([\n    initState,\n    () => initState\n]);\n\nexport const StateProvider: React.FC<StateProviderProps> = ({ reducer, children }: StateProviderProps) => {\n    const [ state, dispatch ] = useReducer(reducer, initState);\n\n    return (\n        <StateContext.Provider value={ [ state, dispatch ] }>\n            { children }\n        </StateContext.Provider>\n    );\n};\n\nexport const useStateValue = () => useContext(StateContext);","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { FieldProps, Field, ErrorMessage } from 'formik';\nimport { GenderSelect } from '../types';\n\ninterface TextProps extends FieldProps {\n    label: string;\n    placeholder: string;\n}\n\ninterface NumberProps extends FieldProps {\n    label: string;\n    min: number;\n    max: number;\n    errorMessage?: string;\n}\n\ninterface SelectProps {\n    label: string;\n    name: string;\n    options: GenderSelect[];\n}\n\nexport const TextField: React.FC<TextProps> = ({ field, label, placeholder }: TextProps) => {\n    return (\n        <Form.Field>\n            <label>{ label }</label>\n            <Field { ...field } placeholder={ placeholder }/>\n            <div style={ { color: 'red' } }>\n                <ErrorMessage name={ field.name }/>\n            </div>\n        </Form.Field>\n    );\n};\n\nexport const NumberField: React.FC<NumberProps> = ({ field, label, min, max }: NumberProps) => {\n    return (\n        <Form.Field>\n            <label>{ label }</label>\n            <Field { ...field } type='number' min={ min } max={ max }/>\n            <div style={ { color: 'red' } }>\n                <ErrorMessage name={ field.name }/>\n            </div>\n        </Form.Field>\n    );\n};\n\nexport const SelectField: React.FC<SelectProps> = ({ label, name, options }: SelectProps) => {\n    return (\n        <Form.Field>\n            <label>{ label }</label>\n            <Field as='select' name={ name } className='ui dropdown'>\n                {\n                    options.map((option, id) => (\n                        <option key={ id } value={ option.value }>\n                            { option.label || option.value }\n                        </option>\n                    ))\n                }\n            </Field>\n        </Form.Field>\n    );\n};","import React from 'react';\nimport { Formik, Field, Form } from \"formik\";\nimport { Grid, Button } from 'semantic-ui-react';\nimport { TextField, NumberField } from './Form';\nimport { FormProps, Book } from '../types';\n\ntype Props = Omit<FormProps, 'errMsg' | 'isOpen'>;\n\nconst AddBookForm: React.FC<Props> = ({ onSubmit, onClose }: Props) => {\n    const initValue: Book = {\n        isbn: '',\n        title: '',\n        published: '',\n        author: '',\n        genres: [],\n        rating: 0,\n        description: '',\n    };\n\n    const checkForm = (values: Book) => {\n        const reg = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/g;\n        const errFill = 'You must fill out form';\n        const errInvalid = 'Invalid date format';\n        const errors: {\n            [field: string]: string;\n        } = {};\n\n        if (!values.title) {\n            errors.title = errFill;\n        }\n        if (!values.published.match(reg)) {\n            errors.published = errInvalid;\n        }\n        if (!values.author) {\n            errors.author = errFill;\n        }\n\n        return errors;\n    }\n\n    return (\n        <Formik initialValues={ initValue } onSubmit={ onSubmit } validate={ checkForm }>\n        {\n            ({ isValid, dirty }) => {\n                return (\n                    <Form className='form ui'>\n                        <Field label='Book Title' placeholder='Title' name='title' component={ TextField }/>\n                        <Field label='Published Date' placeholder='YYYY-MM-DD' name='published' component={ TextField }/>\n                        <Field label='Author name' placeholder='Author' name='author' component={ TextField }/>\n                        <Field label='Genres' placeholder='Thriller, Adventure, Horror (optional)' name='genres' component={ TextField }/>\n                        <Field label='Description' placeholder='Description (optional)' name='description' component={ TextField }/>\n                        <Field label='Rating' placeholder='Rating' name='rating' min={ 0 } max={ 5 } component={ NumberField }/>\n                        <Grid>\n                            <Grid.Column floated='left'>\n                                <Button type='button' color='red' onClick={ onClose }>Cancel</Button>\n                            </Grid.Column>\n                            <Grid.Column floated='right'>\n                                <Button type='submit' floated='right' color='blue' disabled={ !dirty || !isValid }>Save</Button>\n                            </Grid.Column>\n                        </Grid>\n                    </Form>\n                );\n            }\n        }\n        </Formik>\n    );\n};\n\nexport default AddBookForm;","import React from 'react';\nimport { Modal, Segment } from 'semantic-ui-react';\nimport AddBookForm from './AddBookForm';\nimport { ModalProps } from '../types';\n\nconst AddBookModal = ({ onSubmit, onClose, modalOpen, errMsg }: ModalProps) => {\n    return (\n        <Modal open={ modalOpen } onClose={ onClose } centered={ false } closeIcon>\n            <Modal.Header>Add a new book</Modal.Header>\n            <Modal.Content>\n                { errMsg && <Segment inverted color='red'>{`Error: ${errMsg}`}</Segment> }\n                <AddBookForm onSubmit={ onSubmit } onClose={ onClose }/>\n            </Modal.Content>\n        </Modal>\n    );\n}\n\nexport default AddBookModal;","import React from 'react';\nimport { Rating } from 'semantic-ui-react';\nimport { RatingProps } from '../types';\n\nconst RatingBar = ({ rating }: RatingProps) => {\n    return (\n        <div className='rating-bar'>\n            <Rating icon='star' disabled rating={ rating } maxRating={ 5 }/>\n        </div>\n    );\n};\n\nexport default RatingBar;","import React from 'react';\nimport axios from 'axios';\nimport { Container, Table, Button } from \"semantic-ui-react\";\nimport { useStateValue } from '../state/state';\nimport { Book } from '../types';\nimport AddBookModal from '../AddBookModal';\nimport RatingBar from '../RatingBar';\nimport { baseUrl } from '../constants';\nimport { Link } from 'react-router-dom';\n\nconst BookListPage: React.FC = () => {\n    const [ { books }, dispatch ] = useStateValue();\n    const [ modalOpen, setModalOpen ] = React.useState<boolean>(false);\n    const [ error, setError ] = React.useState<string>('');\n\n    const openModal = (): void => {\n        setModalOpen(true);\n    };\n\n    const closeModal = (): void => {\n        setModalOpen(false);\n        setError('');\n    };\n\n    const genISBN = (): string => Math.floor(1000000000 + Math.random() * 9000000000).toString();\n\n    const submitNewBook = async (values: Book) => {\n        try {\n            const book: Book = {\n                ...values,\n                isbn: genISBN(),\n                genres: values.genres.toString().replace(/ /g, '').split(','),\n            }\n            const { data: newBook } = await axios.post<Book>(`${baseUrl}/books`, book);\n            dispatch({ type: 'ADD_BOOK', payload: newBook });\n            closeModal();\n        } catch (err) {\n            console.error(err.response.data.error);\n            setError(err.response.data.error);\n        }\n    };\n\n    return (\n        <div className='App'>\n            <Container textAlign='center'>\n                <h3>Book List</h3>\n            </Container>\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Title</Table.HeaderCell>\n                        <Table.HeaderCell>Author</Table.HeaderCell>\n                        <Table.HeaderCell>Published</Table.HeaderCell>\n                        <Table.HeaderCell>Genres</Table.HeaderCell>\n                        <Table.HeaderCell>Rating</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {\n                        Object.values(books).map((book: Book, id: number) => (\n                            <Table.Row key={ id }>\n                                <Table.Cell><Link to={'/books/' + book.isbn }>{ book.title }</Link></Table.Cell>\n                                <Table.Cell>{ book.author }</Table.Cell>\n                                <Table.Cell>{ book.published }</Table.Cell>\n                                <Table.Cell>{ book.genres.join(', ') }</Table.Cell>\n                                <Table.Cell><RatingBar rating={ book.rating || 0 }/></Table.Cell>\n                            </Table.Row>\n                        ))\n                    }\n                </Table.Body>\n            </Table>\n            <AddBookModal modalOpen={ modalOpen } onSubmit={ submitNewBook } onClose={ closeModal } errMsg={ error }/>\n            <Button onClick={ () => openModal() }>Add new book</Button>\n        </div>\n    );\n}\n\nexport default BookListPage;","export const baseUrl = '/api';","import React from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\nimport { Container, Divider, Button } from 'semantic-ui-react';\nimport { useStateValue } from '../state';\nimport { baseUrl } from '../constants';\nimport RatingBar from '../RatingBar';\nimport { Book } from '../types';\n\nconst BookInfoPage: React.FC = () => {\n    const [ { books }, dispatch ] = useStateValue();\n    const { isbn } = useParams<{ isbn: string }>();\n    const book = Object.values(books).find(b => b.isbn === isbn);\n\n    const deleteBook = async () => {\n        try {\n            const { data: bookList } = await axios.get<Book>(`${baseUrl}/books/${isbn}`);\n            await axios.delete<any>(`${baseUrl}/books/${isbn}`);\n            dispatch({ type: 'DEL_BOOK', payload: bookList });\n        } catch (err) {\n            console.error(err.response.data.error);\n        }\n    };\n\n    return (\n        <div className='App'>\n            <Container textAlign='left'>\n                <h3>{ book?.title }<RatingBar rating={ book?.rating || 0 }/></h3>\n                <Divider/>\n                <div>Author: { book?.author }</div>\n                <div>Published: { book?.published }</div>\n                <div>Genres: {book?.genres.join(', ') }</div>\n                <div>Description: {book?.description }</div>\n            </Container>\n            <Divider hidden/>\n            <Button as={ Link } to='/' basic color='red' onClick={ deleteBook }>Delete</Button>\n        </div>\n    );\n};\n\nexport default BookInfoPage;","import React from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport { Container, Divider, Menu } from \"semantic-ui-react\";\n\nimport { Book } from './types';\nimport { useStateValue } from './state/state';\nimport { baseUrl } from './constants';\nimport BookListPage from './BookListPage';\nimport BookInfoPage from './BookInfoPage';\n\nconst App: React.FC = () => {\n  const [ , dispatch ] = useStateValue();\n  const [ activeItem, setActiveItem ] = React.useState('home');\n\n  React.useEffect(() => {\n    (async () => {\n      try {\n        const { data: bookList } = await axios.get<Book[]>(`${baseUrl}/books`);\n        dispatch({ type: 'SET_BOOK_LIST', payload: bookList });\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [dispatch]);\n\n  return (\n    <div className='App'>\n      <Router>\n        <Container>\n          <Menu pointing secondary>\n            <Menu.Item as={ Link } to='/' name='home' active={activeItem === 'home'} onClick={ () => setActiveItem('home') }>Home</Menu.Item>\n            <Menu.Item name='book' active={activeItem === 'book'} onClick={ () => setActiveItem('book') }>Book</Menu.Item>\n            <Menu.Item name='author' active={activeItem === 'author'} onClick={ () => setActiveItem('author') }>Author</Menu.Item>\n          </Menu>\n          <Divider hidden/>\n          <Switch>\n            <Route path='/books/:isbn' render={ () => <BookInfoPage/> }/>\n            <Route path='/' render={ () => <BookListPage/> }/>\n          </Switch>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport { StateProvider, reducer } from './state';\n\nReactDOM.render(\n    <StateProvider reducer={ reducer }>\n    <App />\n    </StateProvider>,\n  document.getElementById('root')\n);","import { State, Action } from '../types';\n\nexport const reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n        case 'SET_BOOK_LIST':\n            return {\n                ...state,\n                books: {\n                    ...action.payload.reduce((init, book) => ({\n                        ...init,\n                        [book.isbn]: book,\n                    }), {}),\n                    ...state.books,\n                }\n            };\n        case 'ADD_BOOK':\n            return {\n                ...state,\n                books: {\n                    ...state.books,\n                    [action.payload.isbn]: action.payload,\n                }\n            };\n        case 'DEL_BOOK':\n            const obj = {\n                ...state,\n                books: {\n                    ...state.books,\n                }\n            };\n            delete obj.books[action.payload.isbn];\n\n            return obj;\n        default:\n            return state;\n    }\n};"],"sourceRoot":""}